---
- hosts: "{{ dkserver }}"
  remote_user: root
  gather_facts: no
  vars:
    delegate_host: 192.168.10.74
    local_java_dir: "{{ file_path }}"
    dest_dir: "/etc/ansible/new_playbook/dkparkv3/dikong"
    file_name: "{{ filename }}"
    module_name: "{{ module }}"
    dkbackend: "/data/servers/dkpark-backend"
    dkjob: "/data/servers/dkpark-job"
    dkmock: "/data/servers/dkpark-mock"
    dkservice: "/data/servers/dkpark-service"
    etc_dir: "/data/etc/projects"
    downfile_dir: "/data/dkpark/download_file"
    dksource_dir: "/dkpark_source/fe"
    backup_dir: "/data/deploy/dikong"
    gitlab_url: "ssh://git@gitlab.abc.com:2222/rongyi"
  tasks:  
  - name: create dir 
    file: path={{ item }} state=directory
    with_items:
      - "{{ dkbackend }}"
      - "{{ dkjob }}"
      - "{{ dkmock }}"
      - "{{ dkservice }}"
      - "{{ etc_dir }}"
      - "{{ downfile_dir }}"
      - "{{ dksource_dir}}"

  - name: This block run in the test environment. rsync java file on localhost and push file to opgilt and backup java file and rsync file to realserver
    block:
    - name: copy java file to test directory on localhost
      copy: src={{local_java_dir}}/{{filename}} dest={{dest_dir}}/test/java/{{module}}/{{module}}.jar 
      delegate_to: localhost

    - name: push java to opgitlab
      shell: cd {{ dest_dir }}/test/java/{{module}} && git checkout test && git add -A && git commit -m "test `date +%F-%T`" && git push origin test
      delegate_to: localhost
      ignore_errors: true

    - name:  backup file on reposerver
      git: repo=ssh://git@gitlab.rongyi.com:2222/rongyi/{{module}}.git dest={{backup_dir}}/test/java/{{module}} accept_hostkey=no force=yes version=test
      delegate_to: "{{ delegate_host }}"

    - name:  sync java from reposerver to realserver
      synchronize: 
        src: "{{ backup_dir }}/test/java/{{module}}/"
        dest: "/data/servers/{{module}}/" 
        rsync_opts: 
         - "--exclude=.git"
         - "--exclude=*.md"
      delegate_to: "{{ delegate_host }}"
      notify: "restartapp"
    when: env == "test" and rolls is undefined

  - name: This block run in the stag environment. rsync java file on localhost and push file to opgilt and backup java file and rsync file to realserver
    block:
    - name: copy java file to v4 directory on localhost
      copy: src={{local_java_dir}}/{{filename}} dest={{dest_dir}}/v4/java/{{module}}/{{module}}.jar 
      delegate_to: localhost

    - name: push java to opgitlab
      shell: cd {{ dest_dir }}/v4/java/{{module}} && git checkout v4 && git add -A && git commit -m "v4 `date +%F-%T`" && git push origin v4
      delegate_to: localhost
      ignore_errors: true

    - name:  backup file on reposerver
      git: repo=ssh://git@gitlab.abc.com:2222/rongyi/{{module}}.git dest={{backup_dir}}/v4/java/{{module}} accept_hostkey=no force=yes version=v4
      delegate_to: "{{ delegate_host }}"

    - name:  sync java from reposerver to realserver
      synchronize: 
        src: "{{ backup_dir }}/v4/java/{{module}}/"
        dest: "/data/servers/{{module}}/" 
        rsync_opts: 
         - "--exclude=.git"
         - "--exclude=*.md"
      delegate_to: "{{ delegate_host }}"
      notify: "restartapp"
    when: env == "stag" and rolls is undefined

  - name: This block run in the prod environment. rsync java file on localhost and push file to opgilt and backup java file and rsync file to realserver
    block:
    - name: copy java file to v8 directory on localhost
      copy: src={{local_java_dir}}/{{filename}} dest={{dest_dir}}/v8/java/{{module}}/{{module}}.jar 
      delegate_to: localhost

    - name: push java to opgitlab
      shell: cd {{ dest_dir }}/v8/java/{{module}} && git checkout v8 && git add -A && git commit -m "v8 `date +%F-%T`" && git push origin v8
      delegate_to: localhost
      ignore_errors: true

    - name:  backup file on reposerver
      git: repo=ssh://git@gitlab.rongyi.com:2222/rongyi/{{module}}.git dest={{backup_dir}}/v8/java/{{module}} accept_hostkey=no force=yes version=v8
      delegate_to: "{{ delegate_host }}"

    - name:  sync java from reposerver to realserver
      synchronize: 
        src: "{{ backup_dir }}/v8/java/{{module}}/"
        dest: "/data/servers/{{module}}/" 
        rsync_opts: 
         - "--exclude=.git"
         - "--exclude=*.md"
      delegate_to: "{{ delegate_host }}"
      #notify: "restart_java_app"
    when: env == "prod" and rolls is undefined

  - name: roll back test
    block:
    - name: roll back version,rolls=1表示回退到上一个版本，依次类推
      shell: cd {{ dest_dir}}/test/java/{{module}} && git checkout test && git reset --hard HEAD~{{rolls}} && git push origin test -f
      delegate_to: localhost

    - name:  git checkout on reposerver
      git: repo={{gitlab_url}}/{{module}}.git dest={{backup_dir}}/test/java/{{module}} accept_hostkey=no force=yes version=test
      delegate_to: "{{ delegate_host }}"

    - name:  sync java from reposerver to realserver
      synchronize: 
        src: "{{ backup_dir }}/test/java/{{module}}/"
        dest: "/data/servers/{{module}}/"
        rsync_opts:
         - "--exclude=.git"
         - "--exclude=*.md"
      delegate_to: "{{ delegate_host }}"
      notify: "restartapp"
    when: env == "test" and rolls is defined

  - name: roll back v4
    block:
    - name: roll back version,rolls=1表示回退到上一个版本，依次类推
      shell: cd {{ dest_dir}}/v4/java/{{module}} && git checkout v4 && git reset --hard HEAD~{{rolls}} && git push origin v4 -f
      delegate_to: localhost

    - name:  git checkout on reposerver
      git: repo={{gitlab_url}}/{{module}}.git dest={{backup_dir}}/v4/java/{{module}} accept_hostkey=no force=yes version=v4
      delegate_to: "{{ delegate_host }}"

    - name:  sync java from reposerver to realserver
      synchronize: 
        src: "{{ backup_dir }}/v4/java/{{module}}/"
        dest: "/data/servers/{{module}}/"
        rsync_opts:
         - "--exclude=.git"
         - "--exclude=*.md"
      delegate_to: "{{ delegate_host }}"
      notify: "restartapp"
    when: env == "v4" and rolls is defined

  - name: roll back v8
    block:
    - name: roll back version,rolls=1表示回退到上一个版本，依次类推
      shell: cd {{ dest_dir}}/v8/java/{{module}} && git checkout v8 && git reset --hard HEAD~{{rolls}} && git push origin v8 -f
      delegate_to: localhost

    - name:  git checkout on reposerver
      git: repo={{gitlab_url}}/{{module}}.git dest={{backup_dir}}/v8/java/{{module}} accept_hostkey=no force=yes version=v8
      delegate_to: "{{ delegate_host }}"

    - name:  sync java from reposerver to realserver
      synchronize: 
        src: "{{ backup_dir }}/v8/java/{{module}}/"
        dest: "/data/servers/{{module}}/"
        rsync_opts:
         - "--exclude=.git"
         - "--exclude=*.md"
      delegate_to: "{{ delegate_host }}"
      notify: "restartapp"
    when: env == "v8" and rolls is defined

  handlers:
  - name: restartapp
    script: ./scripts/restart_dkapp.sh {{ module }}
   
  - name: restart jar app on one java server
    listen: restart_java_app
    script: ./scripts/restart_dkapp.sh {{ module }}
    delegate_to: dk-java-prod-01

  - name: Wait for 10s
    listen: restart_java_app
    wait_for: timeout=10

  - name: restart jar app on other java server
    listen: restart_java_app
    script: ./scripts/restart_dkapp.sh {{ module }}
    delegate_to: dk-java-prod-02
