version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: repo.abc.com:5000/traefik:v2.9.8
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    command: traefik -c /etc/traefik/traefik.toml
    volumes:
      # So that Traefik can listen to the Docker events
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /data/logs:/data/logs
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_net1
    deploy:
      placement:
        constraints:
          - node.role == manager
  whoami:
    # A container that exposes an API to show its IP address
    image: repo.abc.com:5000/whoami:latest
    container_name: whoami
    networks:
      - my_net1
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.docker.com`)"
        - "traefik.http.routers.whoami.entrypoints=web"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
  nginx:
    # A container that exposes an API to show its IP address
    image: repo.abc.com:5000/nginx
    container_name: nginx-traefik
    networks:
      - my_net1
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nginx.rule=Host(`nginx.docker.com`)"
        - "traefik.http.routers.nginx.entrypoints=web"
        - "traefik.http.services.nginx.loadbalancer.server.port=80"
networks:
  my_net1:
    external: true
